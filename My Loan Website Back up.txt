<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>JazaLoan - Kenya Loan Calculator</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>

  <style>
    /* All of your original styles are preserved */
    body {
      font-family: Arial, sans-serif;
      background: #f2f2f2;
      margin: 0;
      padding: 0;
    }
    .container {
      max-width: 600px;
      margin: 30px auto;
      background: #fff;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    h1, h2 {
      text-align: center;
      color: #2c3e50;
    }
    label {
      display: block;
      margin-top: 15px;
    }
    input {
      width: 100%;
      padding: 10px;
      margin-top: 5px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }
    button {
      background: #27ae60;
      color: white;
      padding: 12px;
      border: none;
      border-radius: 5px;
      margin-top: 20px;
      width: 100%;
      font-size: 16px;
      cursor: pointer;
      transition: transform 0.2s ease, background-color 0.3s ease;
    }
    button:hover {
      background-color: #1e8449;
      transform: scale(1.03);
    }
    .results, .tutorial, .paye-section {
      margin-top: 25px;
      padding: 15px;
      background: #ecf0f1;
      border-radius: 8px;
    }
    .ad-space {
      margin: 20px 0;
      text-align: center;
      padding: 10px;
      background: #dcdde1;
      color: #888;
      border-radius: 5px;
    }
    table {
      width: 100%;
      margin-top: 20px;
      border-collapse: collapse;
    }
    th, td {
      border: 1px solid #ccc;
      padding: 8px;
      text-align: center;
    }
    th {
      background-color: #bdc3c7;
    }
    #download-btn, #payslip-btn {
      background-color: #2980b9;
      margin-top: 10px;
      transition: transform 0.2s ease, background-color 0.3s ease;
    }
    #download-btn:hover, #payslip-btn:hover {
      background-color: #1f6392;
      transform: scale(1.03);
    }
    .fade-in {
      animation: fadeIn 0.8s ease-in-out;
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    .site-header {
      padding: 5px 10px;
      background-color: #ffffff;
      border-bottom: 1px solid #ccc;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-wrap: wrap;
    }
    .header-content {
      display: flex;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      max-width: 1000px;
      padding: 5px 15px;
    }
    .logo {
      height: 90px;
      max-height: 90px;
      width: auto;
      object-fit: contain;
      margin-right: 10px;
    }
    .navbar {
      display: flex;
      gap: 15px;
      flex-wrap: wrap;
      justify-content: center;
    }
    .navbar a {
      position: relative;
      color: #2c3e50;
      text-decoration: none;
      font-weight: 600;
      font-size: 14px;
      transition: color 0.3s ease;
      padding: 6px 10px;
    }
    .navbar a::after {
      content: '';
      position: absolute;
      left: 50%;
      bottom: 0;
      width: 0%;
      height: 2px;
      background-color: #007bff;
      transition: all 0.3s ease;
      transform: translateX(-50%);
    }
    .navbar a:hover {
      color: #007bff;
    }
    .navbar a:hover::after {
      width: 100%;
    }
    @media (max-width: 600px) {
      .header-content {
        flex-direction: column;
        align-items: center;
      }
      .navbar {
        justify-content: center;
        margin-top: 10px;
      }
    }
    #about {
      background-color: #f9f9f9;
      border-top: 1px solid #ccc;
      margin: 40px auto;
      padding: 25px 20px;
      font-family: 'Segoe UI', sans-serif;
      max-width: 800px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
    }
    #about h2 {
      margin-top: 0;
      text-align: center;
      color: #333;
    }
    #about ul {
      padding-left: 20px;
      line-height: 1.6;
    }
    footer {
      background-color: #044378;
      padding: 10px 0;
      font-size: 13px;
      text-align: center;
      color: #fff;
    }
    footer a {
      color: #fff;
      text-decoration: none;
      margin: 0 5px;
    }
    footer a:hover {
      text-decoration: underline;
    }
    .footer-content {
      max-width: 900px;
      margin: 0 auto;
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      align-items: center;
      gap: 8px;
    }
    #backToTop {
      position: fixed;
      bottom: 40px;
      right: 20px;
      width: 40px;
      height: 40px;
      background-color: #1abc9c;
      color: white;
      border: none;
      border-radius: 50%;
      font-size: 18px;
      font-weight: bold;
      line-height: 40px;
      text-align: center;
      cursor: pointer;
      display: none;
      z-index: 9999;
      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
      transition: transform 0.3s ease, background-color 0.3s ease;
    }
    #backToTop:hover {
      background-color: #148f77;
      transform: scale(1.15);
    }

    /* NEW STYLES FOR REVIEWS SECTION */
    #reviews-section {
      background-color: #f0f8ff; /* Light blue background */
      padding: 40px 20px;
      margin: 40px auto;
      max-width: 900px; /* Slightly wider than container to differentiate */
      border-radius: 10px;
      box-shadow: 0 0 15px rgba(0,0,0,0.08);
      text-align: center;
    }

    #reviews-section h2 {
      color: #044378; /* Darker blue from footer */
      margin-bottom: 30px;
      font-size: 2em;
    }

    .review-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
      gap: 25px;
      justify-content: center;
    }

    .review-card {
      background-color: #ffffff;
      padding: 25px;
      border-radius: 8px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.05);
      text-align: left;
      display: flex;
      flex-direction: column;
      justify-content: space-between; /* Pushes reviewer to bottom */
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .review-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 6px 15px rgba(0,0,0,0.1);
    }

    .review-card .stars {
      color: #ffc107; /* Gold color for stars */
      font-size: 1.5em;
      margin-bottom: 10px;
    }

    .review-card p {
      font-size: 1em;
      line-height: 1.6;
      color: #555;
      margin-bottom: 15px; /* Space between text and reviewer */
      flex-grow: 1; /* Allows text to grow and push reviewer down */
    }

    .review-card .reviewer {
      font-size: 0.9em;
      font-style: italic;
      color: #777;
      text-align: right;
      margin-top: auto; /* Pushes reviewer to the bottom of the card */
    }

    /* Responsive adjustments for smaller screens */
    @media (max-width: 768px) {
      .review-grid {
        grid-template-columns: 1fr; /* Stack reviews on smaller screens */
      }
    }
  </style>
</head>
<body>
  <header class="site-header">
    <div class="header-content">
      <img src="logo.png" alt="JazaLoan Logo" class="logo">
      <nav class="navbar">
        <a href="#paye-section">PAYE Calculator</a>
        <a href="#compare-loans">Compare Loans</a>
        <a href="#about">About Us</a>
      </nav>
    </div>
  </header>
  <div class="container">
    <h1>Kenya Loan Calculator - JazaLoan</h1>
    <div class="ad-space">[Ad Space - Top]</div>
    <label for="amount">Loan Amount (Ksh):</label>
    <input type="text" id="amount" placeholder="e.g. 50,000" oninput="formatNumberInput(this)"/>
    <label for="rate">Interest Rate (% per year):</label>
    <input type="text" id="rate" placeholder="e.g. 13" oninput="formatDecimalInput(this)"/>
    <label for="months">Loan Duration (in months):</label>
    <input type="text" id="months" placeholder="e.g. 12" oninput="formatNumberInput(this)"/>
    <button onclick="calculateLoan()">Calculate (Reducing Balance)</button>
    <button onclick="calculateFlatLoan()">Calculate (Flat Rate)</button>
    <div class="results" id="results" style="display: none;">
      <p><strong>Monthly Payment:</strong> Ksh <span id="monthly"></span></p>
      <p><strong>Total Repayable:</strong> Ksh <span id="total"></span></p>
      <p><strong>Total Interest:</strong> Ksh <span id="interest"></span></p>
      <div id="breakdown"></div>
      <button id="download-btn" onclick="downloadPDF()">Download Breakdown</button>
      <button onclick="resetLoanInputs()" style="margin-top: 15px;">Reset & Start Again</button>
    </div>
    <div class="ad-space">[Ad Space - Bottom]</div>
    <div class="tutorial">
      <h3>How to Use This Loan Calculator</h3>
      <p>1. Enter the total amount you want to borrow in Kenyan Shillings (Ksh).</p>
      <p>2. Type in the interest rate provided by your lender (e.g. 13%).</p>
      <p>3. Enter the number of months you’ll repay the loan.</p>
      <p>4. Click the <strong>Calculate</strong> button.</p>
      <p>The calculator will show your expected monthly repayment, total amount you’ll repay, and the total interest charged.</p>
      <p><em>Disclaimer: This tool gives an estimate. Confirm final terms with your lender.</em></p>
    </div>
    <div id="paye-section" class="paye-section">
      <h2>Kenya PAYE Calculator</h2>
      <label for="gross">Gross Monthly Salary (Ksh):</label>
      <input type="text" id="gross" placeholder="e.g. 50,000" oninput="formatGrossInput(this)" />
      <button onclick="calculatePAYE()">Calculate PAYE</button>
      <div id="payeResults" style="margin-top: 15px;"></div>
      <button id="payslip-btn" onclick="downloadPayslip()">Download Payslip (PDF)</button>
      <button id="paye-reset-btn" onclick="resetPAYEInputs()" style="display: none; margin-top: 15px;">Reset & Start Again</button>
    </div>
  </div>
  <section id="about" style="padding: 20px;">
    <h2>About Us</h2>
    <p>
      Welcome to <strong>JazaLoan</strong> – your trusted free online tool for smart financial decisions.
      Whether you're calculating your reducing balance loan, flat rate loan, or PAYE taxes in Kenya,
      JazaLoan provides:
    </p>
    <ul>
      <li>✔ Accurate monthly breakdowns</li>
      <li>✔ PDF downloads for record keeping</li>
      <li>✔ Mobile-friendly design for on-the-go access</li>
      <li>✔ Zero cost – it's completely free to use</li>
    </ul>
    <p>Our mission is to empower Kenyans to understand and control their personal and business finances with ease.</p>
  </section>

  <section id="reviews-section">
    <h2>What Our Users Say</h2>
    <div class="review-grid">
        <div class="review-card">
            <div class="stars">★★★★★</div>
            <p>"This calculator is incredibly accurate and easy to use! It helped me plan my loan repayments perfectly. Highly recommended for anyone in Kenya!"</p>
            <p class="reviewer">- Jane W., Nairobi</p>
        </div>
        <div class="review-card">
            <div class="stars">★★★★★</div>
            <p>"A fantastic tool! The breakdown for both reducing balance and flat rate loans is super clear. Made my financial decisions so much easier."</p>
            <p class="reviewer">- David K., Mombasa</p>
        </div>
        <div class="review-card">
            <div class="stars">★★★★★</div>
            <p>"I love the PAYE calculator feature. It's spot on and helps me understand my deductions. A must-have for every Kenyan."</p>
            <p class="reviewer">- Sarah N., Kisumu</p>
        </div>
        <div class="review-card">
            <div class="stars">★★★★☆</div>
            <p>"Very useful website. I appreciate the ability to download PDF breakdowns. Sometimes it feels a little slow to load, but otherwise great."</p>
            <p class="reviewer">- Paul O., Eldoret</p>
        </div>
    </div>
  </section>
  <script>
    let lastLoanType = '';

    function formatGross(input) {
      let value = input.value.replace(/,/g, '').replace(/[^\d]/g, '');
      if (value) {
        input.value = parseInt(value).toLocaleString('en-KE');
      }
    }

    function resetPAYEInputs() {
      document.getElementById("gross").value = "";
      document.getElementById("payeResults").innerHTML = "";
      document.getElementById("paye-reset-btn").style.display = "none";
      document.getElementById("paye-section").scrollIntoView({ behavior: "smooth" });
    }

    function resetLoanInputs() {
      document.getElementById("amount").value = "";
      document.getElementById("rate").value = "";
      document.getElementById("months").value = "";
      document.getElementById("results").style.display = "none";
      document.getElementById("monthly").innerText = "";
      document.getElementById("total").innerText = "";
      document.getElementById("interest").innerText = "";
      document.getElementById("breakdown").innerHTML = "";
      document.querySelector('.container').scrollIntoView({ behavior: "smooth" });
    }

    function formatNumber(num) {
      return num.toLocaleString("en-KE", { minimumFractionDigits: 2, maximumFractionDigits: 2 });
    }

    function formatNumberInput(input) {
      let value = input.value.replace(/,/g, '').replace(/[^\d]/g, '');
      if (value) {
        input.value = parseInt(value).toLocaleString('en-KE');
      } else {
        input.value = '';
      }
    }

    function formatDecimalInput(input) {
      let value = input.value.replace(/[^0-9.]/g, '');
      const parts = value.split('.');
      if (parts.length > 2) value = parts[0] + '.' + parts.slice(1).join('');
      input.value = value;
    }

    function calculateLoan() {
      lastLoanType = 'reducing';
      const P = parseFloat(document.getElementById("amount").value.replace(/,/g, ''));
      const annualRate = parseFloat(document.getElementById("rate").value.replace(/,/g, ''));
      const N = parseInt(document.getElementById("months").value.replace(/,/g, ''));

      if (isNaN(P) || isNaN(annualRate) || isNaN(N)) {
        alert("Please fill in all fields correctly.");
        return;
      }

      const R = annualRate / 12 / 100;
      const monthlyPrincipal = P / N;
      let balance = P;
      let totalInterest = 0;
      let breakdownHTML = `
        <h4>Reducing Balance Repayment Breakdown</h4>
        <table id="breakdown-table">
          <tr>
            <th>Month</th>
            <th>Principal (Ksh)</th>
            <th>Interest (Ksh)</th>
            <th>Monthly Installment (Ksh)</th>
            <th>Balance (Ksh)</th>
          </tr>
      `;
      for (let i = 1; i <= N; i++) {
        const interest = balance * R;
        const installment = monthlyPrincipal + interest;
        balance -= monthlyPrincipal;
        totalInterest += interest;
        breakdownHTML += `
          <tr>
            <td>${i}</td>
            <td>${formatNumber(monthlyPrincipal)}</td>
            <td>${formatNumber(interest)}</td>
            <td><strong>${formatNumber(installment)}</strong></td>
            <td>${formatNumber(Math.max(balance, 0))}</td>
          </tr>
        `;
      }
      const total = P + totalInterest;
      document.getElementById("monthly").innerText = formatNumber(monthlyPrincipal + (P * R));
      document.getElementById("total").innerText = formatNumber(total);
      document.getElementById("interest").innerText = formatNumber(totalInterest);
      document.getElementById("results").style.display = "block";
      document.getElementById("results").classList.add("fade-in");
      document.getElementById("breakdown").innerHTML = breakdownHTML + '</table>';
      document.getElementById("results").scrollIntoView({ behavior: "smooth" });
    }

    function calculateFlatLoan() {
      lastLoanType = 'flat';
      const P = parseFloat(document.getElementById("amount").value.replace(/,/g, ''));
      const annualRate = parseFloat(document.getElementById("rate").value.replace(/,/g, ''));
      const N = parseInt(document.getElementById("months").value.replace(/,/g, ''));

      if (isNaN(P) || isNaN(annualRate) || isNaN(N)) {
        alert("Please fill in all fields correctly.");
        return;
      }

      const monthlyInterest = (P * annualRate) / (12 * 100);
      const principalPerMonth = P / N;
      const EMI = principalPerMonth + monthlyInterest;
      const total = EMI * N;
      const totalInterest = monthlyInterest * N;
      document.getElementById("monthly").innerText = EMI.toLocaleString("en-KE", { minimumFractionDigits: 2 });
      document.getElementById("total").innerText = total.toLocaleString("en-KE", { minimumFractionDigits: 2 });
      document.getElementById("interest").innerText = totalInterest.toLocaleString("en-KE", { minimumFractionDigits: 2 });
      document.getElementById("results").style.display = "block";
      document.getElementById("results").classList.add("fade-in");
      document.getElementById("results").scrollIntoView({ behavior: "smooth" });
      let breakdownHTML = `
        <h4>Flat Rate Breakdown</h4>
        <table id="breakdown-table">
          <tr>
            <th>Month</th>
            <th>Interest (Ksh)</th>
            <th>Monthly Payment (Ksh)</th>
            <th>Balance Remaining (Ksh)</th>
          </tr>
      `;
      for (let i = 1; i <= N; i++) {
        const balanceRemaining = P - (principalPerMonth * i);
        breakdownHTML += `
          <tr>
            <td>${i}</td>
            <td>${formatNumber(monthlyInterest)}</td>
            <td>${formatNumber(EMI)}</td>
            <td>${formatNumber(Math.max(balanceRemaining, 0))}</td>
          </tr>
        `;
      }
      breakdownHTML += '</table>';
      document.getElementById("breakdown").innerHTML = breakdownHTML;
    }

    function downloadPDF() {
      const { jsPDF } = window.jspdf;
      const doc = new jsPDF();
      doc.setFont("helvetica", "normal");
      doc.setFontSize(10);
      const table = document.getElementById("breakdown-table");
      if (!table) return;
      const headers = [];
      const data = [];

      for (let i = 0; i < table.rows.length; i++) {
        const row = [];
        for (let j = 0; j < table.rows[i].cells.length; j++) {
          let cellText = table.rows[i].cells[j].innerText;
          if (i === 0 || j === 0) {
            row.push(cellText);
          } else {
            const numeric = parseFloat(cellText.replace(/,/g, ''));
            row.push(isNaN(numeric) ? cellText : formatNumber(numeric));
          }
        }
        if (i === 0) {
          headers.push(row);
        } else {
          if (lastLoanType === 'flat' && i === table.rows.length - 1 && row.length >= 4) {
            row[3] = '0.00';
          }
          data.push(row);
        }
      }

      const amountValue = document.getElementById("amount").value;
      const cleanedAmount = amountValue ? amountValue.replace(/,/g, '') : "N/A";
      const formattedAmount = parseFloat(cleanedAmount).toLocaleString("en-KE", { minimumFractionDigits: 2 });
      const monthlyInstallment = document.getElementById("monthly").innerText;
      const totalRepayment = document.getElementById("total").innerText;
      const totalInterest = document.getElementById("interest").innerText;
      const loanTypeText = lastLoanType === 'flat' ? 'Flat Rate' : 'Reducing Balance';
      const title = `${loanTypeText} Loan Breakdown for Ksh ${formattedAmount}`;
      doc.setFontSize(12);
      doc.setFont(undefined, 'bold');
      doc.text(title, 14, 14);
      doc.setFontSize(10);
      doc.setFont(undefined, 'normal');
      const summaryStartY = 22;
      doc.text("Summary:", 14, summaryStartY);
      doc.text(`Loan Type: ${loanTypeText}`, 14, summaryStartY + 8);
      doc.text(`Loan Amount: Ksh ${formatNumber(parseFloat(cleanedAmount))}`, 14, summaryStartY + 16);
      doc.text(`Loan Duration: ${document.getElementById("months").value} months`, 14, summaryStartY + 24);
      doc.text(`Interest Rate: ${document.getElementById("rate").value}% per annum`, 14, summaryStartY + 32);
      doc.text(`Monthly Installment: Ksh ${monthlyInstallment}`, 14, summaryStartY + 40);
      doc.text(`Total Interest: Ksh ${totalInterest}`, 14, summaryStartY + 48);
      doc.text(`Total Repayment: Ksh ${totalRepayment}`, 14, summaryStartY + 56);
      doc.autoTable({
        head: headers,
        body: data,
        startY: summaryStartY + 64,
        theme: 'grid',
        styles: { fontSize: 9, font: "helvetica" }
      });
      const fileAmount = parseFloat(cleanedAmount).toLocaleString('en-KE', { minimumFractionDigits: 0 }).replace(/,/g, '');
      doc.save(`loan_breakdown_ksh_${fileAmount}.pdf`);
    }

    function calculatePAYE() {
      const grossInput = document.getElementById("gross").value.replace(/,/g, '');
      const gross = parseFloat(grossInput);
      if (!gross || gross <= 0) {
        alert("Enter valid gross salary");
        return;
      }
      const tier1Limit = 8000;
      const tier2Limit = 72000;
      const tier1 = Math.min(gross, tier1Limit) * 0.06;
      const tier2 = gross > tier1Limit ? Math.min(gross, tier2Limit) - tier1Limit : 0;
      const nssf = tier1 + (tier2 * 0.06);
      const shif = Math.max(300, gross * 0.0275);
      const housing = gross * 0.015;
      const taxable = gross - nssf - shif - housing;
      let incomeTax = 0;
      if (taxable <= 24000) {
        incomeTax = taxable * 0.10;
      } else if (taxable <= 32333) {
        incomeTax = (24000 * 0.10) + ((taxable - 24000) * 0.25);
      } else if (taxable <= 500000) {
        incomeTax = (24000 * 0.10) + (8333 * 0.25) + ((taxable - 32333) * 0.30);
      } else if (taxable <= 800000) {
        incomeTax = (24000 * 0.10) + (8333 * 0.25) + ((500000 - 32333) * 0.30) + ((taxable - 500000) * 0.325);
      } else {
        incomeTax = (24000 * 0.10) + (8333 * 0.25) + ((500000 - 32333) * 0.30) + ((800000 - 500000) * 0.325) + ((taxable - 800000) * 0.35);
      }
      const relief = 2400;
      const paye = Math.max(0, incomeTax - relief);
      const payAfterTax = gross - (nssf + shif + housing + paye);

      document.getElementById("payeResults").innerHTML = `
        <h4>Results: (Payslip for <strong>Ksh ${gross.toLocaleString("en-KE", { minimumFractionDigits: 2 })}</strong>)</h4>
        <table>
          <tr><td><strong>BASIC PAY:</strong></td><td>Ksh ${gross.toLocaleString("en-KE", { minimumFractionDigits: 2 })}</td></tr>
          <tr><td><strong>NSSF:</strong></td><td>Ksh ${nssf.toLocaleString("en-KE", { minimumFractionDigits: 2 })}</td></tr>
          <tr><td><strong>SHIF:</strong></td><td>Ksh ${shif.toLocaleString("en-KE", { minimumFractionDigits: 2 })}</td></tr>
          <tr><td><strong>Housing Levy:</strong></td><td>Ksh ${housing.toLocaleString("en-KE", { minimumFractionDigits: 2 })}</td></tr>
          <tr><td><strong>TAXABLE PAY:</strong></td><td>Ksh ${taxable.toLocaleString("en-KE", { minimumFractionDigits: 2 })}</td></tr>
          <tr><td><strong>INCOME TAX:</strong></td><td>Ksh ${incomeTax.toLocaleString("en-KE", { minimumFractionDigits: 2 })}</td></tr>
          <tr><td><strong>Personal Relief:</strong></td><td>Ksh ${relief.toLocaleString("en-KE", { minimumFractionDigits: 2 })}</td></tr>
          <tr><td><strong>P.A.Y.E:</strong></td><td>Ksh ${paye.toLocaleString("en-KE", { minimumFractionDigits: 2 })}</td></tr>
          <tr><td><strong>PAY AFTER TAX:</strong></td><td>Ksh ${payAfterTax.toLocaleString("en-KE", { minimumFractionDigits: 2 })}</td></tr>
          <tr><td><strong>NET PAY:</strong></td><td><strong>Ksh ${payAfterTax.toLocaleString("en-KE", { minimumFractionDigits: 2 })}</strong></td></tr>
        </table>
      `;
      document.getElementById("payeResults").scrollIntoView({ behavior: "smooth" });
      document.getElementById("paye-reset-btn").style.display = "inline-block";
    }

    function downloadPayslip() {
      const gross = parseFloat(document.getElementById("gross").value.replace(/,/g, ''));
      if (!gross || gross <= 0) {
        alert("Enter salary first");
        return;
      }
      const tier1 = Math.min(gross, 8000) * 0.06;
      const tier2 = gross > 8000 ? Math.min(gross, 72000) - 8000 : 0;
      const nssf = tier1 + (tier2 * 0.06);
      const shif = Math.max(300, gross * 0.0275);
      const housing = gross * 0.015;
      const taxable = gross - nssf - shif - housing;
      let incomeTax = 0;
      if (taxable <= 24000) {
        incomeTax = taxable * 0.10;
      } else if (taxable <= 32333) {
        incomeTax = (24000 * 0.10) + ((taxable - 24000) * 0.25);
      } else if (taxable <= 500000) {
        incomeTax = (24000 * 0.10) + (8333 * 0.25) + ((taxable - 32333) * 0.30);
      } else if (taxable <= 800000) {
        incomeTax = (24000 * 0.10) + (8333 * 0.25) + ((500000 - 32333) * 0.30) + ((taxable - 500000) * 0.325);
      } else {
        incomeTax = (24000 * 0.10) + (8333 * 0.25) + ((500000 - 32333) * 0.30) + ((800000 - 500000) * 0.325) + ((taxable - 800000) * 0.35);
      }
      const relief = 2400;
      const paye = Math.max(0, incomeTax - relief);
      const payAfterTax = gross - (nssf + shif + housing + paye);
      const { jsPDF } = window.jspdf;
      const doc = new jsPDF();
      doc.text(`Payslip for Ksh ${gross.toLocaleString("en-KE", { minimumFractionDigits: 2 })}`, 14, 20);
      doc.autoTable({
        startY: 30,
        head: [["Item", "Amount (Ksh)"]],
        body: [
          ["Basic Pay", gross.toLocaleString("en-KE", { minimumFractionDigits: 2 })],
          ["NSSF", nssf.toLocaleString("en-KE", { minimumFractionDigits: 2 })],
          ["SHIF", shif.toLocaleString("en-KE", { minimumFractionDigits: 2 })],
          ["Housing Levy", housing.toLocaleString("en-KE", { minimumFractionDigits: 2 })],
          ["Taxable Pay", taxable.toLocaleString("en-KE", { minimumFractionDigits: 2 })],
          ["Income Tax", incomeTax.toLocaleString("en-KE", { minimumFractionDigits: 2 })],
          ["Personal Relief", relief.toLocaleString("en-KE", { minimumFractionDigits: 2 })],
          ["P.A.Y.E", paye.toLocaleString("en-KE", { minimumFractionDigits: 2 })],
          ["Pay After Tax", payAfterTax.toLocaleString("en-KE", { minimumFractionDigits: 2 })],
          ["Net Pay", payAfterTax.toLocaleString("en-KE", { minimumFractionDigits: 2 })],
        ],
        theme: "grid",
        headStyles: { fillColor: [44,62,80] },
        styles: { fontSize: 11 }
      });
      doc.save("payslip_2025.pdf");
    }

    function formatGrossInput(input) {
      let value = input.value.replace(/[^\d]/g, '');
      input.value = value.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }
  </script>
  <footer>
    <div class="footer-content">
      <span><strong>JazaLoan</strong></span>
      <span>|</span>
      <span>© 2025 JazaLoan. All rights reserved.</span>
      <span>|</span>
      <span>📧 <a href="mailto:mburuthus@gmail.com">support@jazaloan.co.ke</a></span>
      <span>|</span>
      <span>💬 <a href="https://wa.me/254742592477" target="_blank">Chat on WhatsApp</a></span>
    </div>
  </footer>
  <button id="backToTop" title="Back to Top">⬆</button>
  <script>
    const backToTopBtn = document.getElementById("backToTop");
    window.addEventListener("scroll", () => {
      if (document.documentElement.scrollTop > 300 || document.body.scrollTop > 300) {
        backToTopBtn.style.display = "block";
      } else {
        backToTopBtn.style.display = "none";
      }
    });

    backToTopBtn.addEventListener("click", () => {
      window.scrollTo({ top: 0, behavior: "smooth" });
    });
  </script>
</body>
</html>